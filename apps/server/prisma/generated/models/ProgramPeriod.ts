
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ProgramPeriod` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ProgramPeriod
 * 
 */
export type ProgramPeriodModel = runtime.Types.Result.DefaultSelection<Prisma.$ProgramPeriodPayload>

export type AggregateProgramPeriod = {
  _count: ProgramPeriodCountAggregateOutputType | null
  _avg: ProgramPeriodAvgAggregateOutputType | null
  _sum: ProgramPeriodSumAggregateOutputType | null
  _min: ProgramPeriodMinAggregateOutputType | null
  _max: ProgramPeriodMaxAggregateOutputType | null
}

export type ProgramPeriodAvgAggregateOutputType = {
  cycleNumber: number | null
  currentAmount: runtime.Decimal | null
  recurringDay: number | null
  recurringDurationDays: number | null
  totalCycles: number | null
}

export type ProgramPeriodSumAggregateOutputType = {
  cycleNumber: number | null
  currentAmount: runtime.Decimal | null
  recurringDay: number | null
  recurringDurationDays: number | null
  totalCycles: number | null
}

export type ProgramPeriodMinAggregateOutputType = {
  id: string | null
  programId: string | null
  startDate: Date | null
  endDate: Date | null
  cycleNumber: number | null
  currentAmount: runtime.Decimal | null
  recurringFrequency: string | null
  recurringDay: number | null
  recurringDurationDays: number | null
  totalCycles: number | null
  nextActivationDate: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProgramPeriodMaxAggregateOutputType = {
  id: string | null
  programId: string | null
  startDate: Date | null
  endDate: Date | null
  cycleNumber: number | null
  currentAmount: runtime.Decimal | null
  recurringFrequency: string | null
  recurringDay: number | null
  recurringDurationDays: number | null
  totalCycles: number | null
  nextActivationDate: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProgramPeriodCountAggregateOutputType = {
  id: number
  programId: number
  startDate: number
  endDate: number
  cycleNumber: number
  currentAmount: number
  recurringFrequency: number
  recurringDay: number
  recurringDurationDays: number
  totalCycles: number
  nextActivationDate: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ProgramPeriodAvgAggregateInputType = {
  cycleNumber?: true
  currentAmount?: true
  recurringDay?: true
  recurringDurationDays?: true
  totalCycles?: true
}

export type ProgramPeriodSumAggregateInputType = {
  cycleNumber?: true
  currentAmount?: true
  recurringDay?: true
  recurringDurationDays?: true
  totalCycles?: true
}

export type ProgramPeriodMinAggregateInputType = {
  id?: true
  programId?: true
  startDate?: true
  endDate?: true
  cycleNumber?: true
  currentAmount?: true
  recurringFrequency?: true
  recurringDay?: true
  recurringDurationDays?: true
  totalCycles?: true
  nextActivationDate?: true
  createdAt?: true
  updatedAt?: true
}

export type ProgramPeriodMaxAggregateInputType = {
  id?: true
  programId?: true
  startDate?: true
  endDate?: true
  cycleNumber?: true
  currentAmount?: true
  recurringFrequency?: true
  recurringDay?: true
  recurringDurationDays?: true
  totalCycles?: true
  nextActivationDate?: true
  createdAt?: true
  updatedAt?: true
}

export type ProgramPeriodCountAggregateInputType = {
  id?: true
  programId?: true
  startDate?: true
  endDate?: true
  cycleNumber?: true
  currentAmount?: true
  recurringFrequency?: true
  recurringDay?: true
  recurringDurationDays?: true
  totalCycles?: true
  nextActivationDate?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ProgramPeriodAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProgramPeriod to aggregate.
   */
  where?: Prisma.ProgramPeriodWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramPeriods to fetch.
   */
  orderBy?: Prisma.ProgramPeriodOrderByWithRelationInput | Prisma.ProgramPeriodOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProgramPeriodWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramPeriods from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramPeriods.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ProgramPeriods
  **/
  _count?: true | ProgramPeriodCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ProgramPeriodAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ProgramPeriodSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProgramPeriodMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProgramPeriodMaxAggregateInputType
}

export type GetProgramPeriodAggregateType<T extends ProgramPeriodAggregateArgs> = {
      [P in keyof T & keyof AggregateProgramPeriod]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProgramPeriod[P]>
    : Prisma.GetScalarType<T[P], AggregateProgramPeriod[P]>
}




export type ProgramPeriodGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramPeriodWhereInput
  orderBy?: Prisma.ProgramPeriodOrderByWithAggregationInput | Prisma.ProgramPeriodOrderByWithAggregationInput[]
  by: Prisma.ProgramPeriodScalarFieldEnum[] | Prisma.ProgramPeriodScalarFieldEnum
  having?: Prisma.ProgramPeriodScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProgramPeriodCountAggregateInputType | true
  _avg?: ProgramPeriodAvgAggregateInputType
  _sum?: ProgramPeriodSumAggregateInputType
  _min?: ProgramPeriodMinAggregateInputType
  _max?: ProgramPeriodMaxAggregateInputType
}

export type ProgramPeriodGroupByOutputType = {
  id: string
  programId: string
  startDate: Date
  endDate: Date
  cycleNumber: number | null
  currentAmount: runtime.Decimal
  recurringFrequency: string | null
  recurringDay: number | null
  recurringDurationDays: number | null
  totalCycles: number | null
  nextActivationDate: Date | null
  createdAt: Date
  updatedAt: Date
  _count: ProgramPeriodCountAggregateOutputType | null
  _avg: ProgramPeriodAvgAggregateOutputType | null
  _sum: ProgramPeriodSumAggregateOutputType | null
  _min: ProgramPeriodMinAggregateOutputType | null
  _max: ProgramPeriodMaxAggregateOutputType | null
}

type GetProgramPeriodGroupByPayload<T extends ProgramPeriodGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProgramPeriodGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProgramPeriodGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProgramPeriodGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProgramPeriodGroupByOutputType[P]>
      }
    >
  >



export type ProgramPeriodWhereInput = {
  AND?: Prisma.ProgramPeriodWhereInput | Prisma.ProgramPeriodWhereInput[]
  OR?: Prisma.ProgramPeriodWhereInput[]
  NOT?: Prisma.ProgramPeriodWhereInput | Prisma.ProgramPeriodWhereInput[]
  id?: Prisma.StringFilter<"ProgramPeriod"> | string
  programId?: Prisma.StringFilter<"ProgramPeriod"> | string
  startDate?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  endDate?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  cycleNumber?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  currentAmount?: Prisma.DecimalFilter<"ProgramPeriod"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.StringNullableFilter<"ProgramPeriod"> | string | null
  recurringDay?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  recurringDurationDays?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  totalCycles?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  nextActivationDate?: Prisma.DateTimeNullableFilter<"ProgramPeriod"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  donations?: Prisma.DonationListRelationFilter
  program?: Prisma.XOR<Prisma.ProgramScalarRelationFilter, Prisma.ProgramWhereInput>
}

export type ProgramPeriodOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  programId?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  cycleNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  currentAmount?: Prisma.SortOrder
  recurringFrequency?: Prisma.SortOrderInput | Prisma.SortOrder
  recurringDay?: Prisma.SortOrderInput | Prisma.SortOrder
  recurringDurationDays?: Prisma.SortOrderInput | Prisma.SortOrder
  totalCycles?: Prisma.SortOrderInput | Prisma.SortOrder
  nextActivationDate?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  donations?: Prisma.DonationOrderByRelationAggregateInput
  program?: Prisma.ProgramOrderByWithRelationInput
}

export type ProgramPeriodWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ProgramPeriodWhereInput | Prisma.ProgramPeriodWhereInput[]
  OR?: Prisma.ProgramPeriodWhereInput[]
  NOT?: Prisma.ProgramPeriodWhereInput | Prisma.ProgramPeriodWhereInput[]
  programId?: Prisma.StringFilter<"ProgramPeriod"> | string
  startDate?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  endDate?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  cycleNumber?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  currentAmount?: Prisma.DecimalFilter<"ProgramPeriod"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.StringNullableFilter<"ProgramPeriod"> | string | null
  recurringDay?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  recurringDurationDays?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  totalCycles?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  nextActivationDate?: Prisma.DateTimeNullableFilter<"ProgramPeriod"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  donations?: Prisma.DonationListRelationFilter
  program?: Prisma.XOR<Prisma.ProgramScalarRelationFilter, Prisma.ProgramWhereInput>
}, "id">

export type ProgramPeriodOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  programId?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  cycleNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  currentAmount?: Prisma.SortOrder
  recurringFrequency?: Prisma.SortOrderInput | Prisma.SortOrder
  recurringDay?: Prisma.SortOrderInput | Prisma.SortOrder
  recurringDurationDays?: Prisma.SortOrderInput | Prisma.SortOrder
  totalCycles?: Prisma.SortOrderInput | Prisma.SortOrder
  nextActivationDate?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ProgramPeriodCountOrderByAggregateInput
  _avg?: Prisma.ProgramPeriodAvgOrderByAggregateInput
  _max?: Prisma.ProgramPeriodMaxOrderByAggregateInput
  _min?: Prisma.ProgramPeriodMinOrderByAggregateInput
  _sum?: Prisma.ProgramPeriodSumOrderByAggregateInput
}

export type ProgramPeriodScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProgramPeriodScalarWhereWithAggregatesInput | Prisma.ProgramPeriodScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProgramPeriodScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProgramPeriodScalarWhereWithAggregatesInput | Prisma.ProgramPeriodScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ProgramPeriod"> | string
  programId?: Prisma.StringWithAggregatesFilter<"ProgramPeriod"> | string
  startDate?: Prisma.DateTimeWithAggregatesFilter<"ProgramPeriod"> | Date | string
  endDate?: Prisma.DateTimeWithAggregatesFilter<"ProgramPeriod"> | Date | string
  cycleNumber?: Prisma.IntNullableWithAggregatesFilter<"ProgramPeriod"> | number | null
  currentAmount?: Prisma.DecimalWithAggregatesFilter<"ProgramPeriod"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.StringNullableWithAggregatesFilter<"ProgramPeriod"> | string | null
  recurringDay?: Prisma.IntNullableWithAggregatesFilter<"ProgramPeriod"> | number | null
  recurringDurationDays?: Prisma.IntNullableWithAggregatesFilter<"ProgramPeriod"> | number | null
  totalCycles?: Prisma.IntNullableWithAggregatesFilter<"ProgramPeriod"> | number | null
  nextActivationDate?: Prisma.DateTimeNullableWithAggregatesFilter<"ProgramPeriod"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ProgramPeriod"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ProgramPeriod"> | Date | string
}

export type ProgramPeriodCreateInput = {
  id?: string
  startDate: Date | string
  endDate: Date | string
  cycleNumber?: number | null
  currentAmount?: runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: string | null
  recurringDay?: number | null
  recurringDurationDays?: number | null
  totalCycles?: number | null
  nextActivationDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  donations?: Prisma.DonationCreateNestedManyWithoutProgramPeriodInput
  program: Prisma.ProgramCreateNestedOneWithoutProgramPeriodsInput
}

export type ProgramPeriodUncheckedCreateInput = {
  id?: string
  programId: string
  startDate: Date | string
  endDate: Date | string
  cycleNumber?: number | null
  currentAmount?: runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: string | null
  recurringDay?: number | null
  recurringDurationDays?: number | null
  totalCycles?: number | null
  nextActivationDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  donations?: Prisma.DonationUncheckedCreateNestedManyWithoutProgramPeriodInput
}

export type ProgramPeriodUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  donations?: Prisma.DonationUpdateManyWithoutProgramPeriodNestedInput
  program?: Prisma.ProgramUpdateOneRequiredWithoutProgramPeriodsNestedInput
}

export type ProgramPeriodUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  programId?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  donations?: Prisma.DonationUncheckedUpdateManyWithoutProgramPeriodNestedInput
}

export type ProgramPeriodCreateManyInput = {
  id?: string
  programId: string
  startDate: Date | string
  endDate: Date | string
  cycleNumber?: number | null
  currentAmount?: runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: string | null
  recurringDay?: number | null
  recurringDurationDays?: number | null
  totalCycles?: number | null
  nextActivationDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProgramPeriodUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProgramPeriodUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  programId?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProgramPeriodScalarRelationFilter = {
  is?: Prisma.ProgramPeriodWhereInput
  isNot?: Prisma.ProgramPeriodWhereInput
}

export type ProgramPeriodListRelationFilter = {
  every?: Prisma.ProgramPeriodWhereInput
  some?: Prisma.ProgramPeriodWhereInput
  none?: Prisma.ProgramPeriodWhereInput
}

export type ProgramPeriodOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ProgramPeriodCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  programId?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  cycleNumber?: Prisma.SortOrder
  currentAmount?: Prisma.SortOrder
  recurringFrequency?: Prisma.SortOrder
  recurringDay?: Prisma.SortOrder
  recurringDurationDays?: Prisma.SortOrder
  totalCycles?: Prisma.SortOrder
  nextActivationDate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProgramPeriodAvgOrderByAggregateInput = {
  cycleNumber?: Prisma.SortOrder
  currentAmount?: Prisma.SortOrder
  recurringDay?: Prisma.SortOrder
  recurringDurationDays?: Prisma.SortOrder
  totalCycles?: Prisma.SortOrder
}

export type ProgramPeriodMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  programId?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  cycleNumber?: Prisma.SortOrder
  currentAmount?: Prisma.SortOrder
  recurringFrequency?: Prisma.SortOrder
  recurringDay?: Prisma.SortOrder
  recurringDurationDays?: Prisma.SortOrder
  totalCycles?: Prisma.SortOrder
  nextActivationDate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProgramPeriodMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  programId?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  cycleNumber?: Prisma.SortOrder
  currentAmount?: Prisma.SortOrder
  recurringFrequency?: Prisma.SortOrder
  recurringDay?: Prisma.SortOrder
  recurringDurationDays?: Prisma.SortOrder
  totalCycles?: Prisma.SortOrder
  nextActivationDate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProgramPeriodSumOrderByAggregateInput = {
  cycleNumber?: Prisma.SortOrder
  currentAmount?: Prisma.SortOrder
  recurringDay?: Prisma.SortOrder
  recurringDurationDays?: Prisma.SortOrder
  totalCycles?: Prisma.SortOrder
}

export type ProgramPeriodCreateNestedOneWithoutDonationsInput = {
  create?: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutDonationsInput, Prisma.ProgramPeriodUncheckedCreateWithoutDonationsInput>
  connectOrCreate?: Prisma.ProgramPeriodCreateOrConnectWithoutDonationsInput
  connect?: Prisma.ProgramPeriodWhereUniqueInput
}

export type ProgramPeriodUpdateOneRequiredWithoutDonationsNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutDonationsInput, Prisma.ProgramPeriodUncheckedCreateWithoutDonationsInput>
  connectOrCreate?: Prisma.ProgramPeriodCreateOrConnectWithoutDonationsInput
  upsert?: Prisma.ProgramPeriodUpsertWithoutDonationsInput
  connect?: Prisma.ProgramPeriodWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProgramPeriodUpdateToOneWithWhereWithoutDonationsInput, Prisma.ProgramPeriodUpdateWithoutDonationsInput>, Prisma.ProgramPeriodUncheckedUpdateWithoutDonationsInput>
}

export type ProgramPeriodCreateNestedManyWithoutProgramInput = {
  create?: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutProgramInput, Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput> | Prisma.ProgramPeriodCreateWithoutProgramInput[] | Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput[]
  connectOrCreate?: Prisma.ProgramPeriodCreateOrConnectWithoutProgramInput | Prisma.ProgramPeriodCreateOrConnectWithoutProgramInput[]
  createMany?: Prisma.ProgramPeriodCreateManyProgramInputEnvelope
  connect?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
}

export type ProgramPeriodUncheckedCreateNestedManyWithoutProgramInput = {
  create?: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutProgramInput, Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput> | Prisma.ProgramPeriodCreateWithoutProgramInput[] | Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput[]
  connectOrCreate?: Prisma.ProgramPeriodCreateOrConnectWithoutProgramInput | Prisma.ProgramPeriodCreateOrConnectWithoutProgramInput[]
  createMany?: Prisma.ProgramPeriodCreateManyProgramInputEnvelope
  connect?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
}

export type ProgramPeriodUpdateManyWithoutProgramNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutProgramInput, Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput> | Prisma.ProgramPeriodCreateWithoutProgramInput[] | Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput[]
  connectOrCreate?: Prisma.ProgramPeriodCreateOrConnectWithoutProgramInput | Prisma.ProgramPeriodCreateOrConnectWithoutProgramInput[]
  upsert?: Prisma.ProgramPeriodUpsertWithWhereUniqueWithoutProgramInput | Prisma.ProgramPeriodUpsertWithWhereUniqueWithoutProgramInput[]
  createMany?: Prisma.ProgramPeriodCreateManyProgramInputEnvelope
  set?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
  disconnect?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
  delete?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
  connect?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
  update?: Prisma.ProgramPeriodUpdateWithWhereUniqueWithoutProgramInput | Prisma.ProgramPeriodUpdateWithWhereUniqueWithoutProgramInput[]
  updateMany?: Prisma.ProgramPeriodUpdateManyWithWhereWithoutProgramInput | Prisma.ProgramPeriodUpdateManyWithWhereWithoutProgramInput[]
  deleteMany?: Prisma.ProgramPeriodScalarWhereInput | Prisma.ProgramPeriodScalarWhereInput[]
}

export type ProgramPeriodUncheckedUpdateManyWithoutProgramNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutProgramInput, Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput> | Prisma.ProgramPeriodCreateWithoutProgramInput[] | Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput[]
  connectOrCreate?: Prisma.ProgramPeriodCreateOrConnectWithoutProgramInput | Prisma.ProgramPeriodCreateOrConnectWithoutProgramInput[]
  upsert?: Prisma.ProgramPeriodUpsertWithWhereUniqueWithoutProgramInput | Prisma.ProgramPeriodUpsertWithWhereUniqueWithoutProgramInput[]
  createMany?: Prisma.ProgramPeriodCreateManyProgramInputEnvelope
  set?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
  disconnect?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
  delete?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
  connect?: Prisma.ProgramPeriodWhereUniqueInput | Prisma.ProgramPeriodWhereUniqueInput[]
  update?: Prisma.ProgramPeriodUpdateWithWhereUniqueWithoutProgramInput | Prisma.ProgramPeriodUpdateWithWhereUniqueWithoutProgramInput[]
  updateMany?: Prisma.ProgramPeriodUpdateManyWithWhereWithoutProgramInput | Prisma.ProgramPeriodUpdateManyWithWhereWithoutProgramInput[]
  deleteMany?: Prisma.ProgramPeriodScalarWhereInput | Prisma.ProgramPeriodScalarWhereInput[]
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type ProgramPeriodCreateWithoutDonationsInput = {
  id?: string
  startDate: Date | string
  endDate: Date | string
  cycleNumber?: number | null
  currentAmount?: runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: string | null
  recurringDay?: number | null
  recurringDurationDays?: number | null
  totalCycles?: number | null
  nextActivationDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  program: Prisma.ProgramCreateNestedOneWithoutProgramPeriodsInput
}

export type ProgramPeriodUncheckedCreateWithoutDonationsInput = {
  id?: string
  programId: string
  startDate: Date | string
  endDate: Date | string
  cycleNumber?: number | null
  currentAmount?: runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: string | null
  recurringDay?: number | null
  recurringDurationDays?: number | null
  totalCycles?: number | null
  nextActivationDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProgramPeriodCreateOrConnectWithoutDonationsInput = {
  where: Prisma.ProgramPeriodWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutDonationsInput, Prisma.ProgramPeriodUncheckedCreateWithoutDonationsInput>
}

export type ProgramPeriodUpsertWithoutDonationsInput = {
  update: Prisma.XOR<Prisma.ProgramPeriodUpdateWithoutDonationsInput, Prisma.ProgramPeriodUncheckedUpdateWithoutDonationsInput>
  create: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutDonationsInput, Prisma.ProgramPeriodUncheckedCreateWithoutDonationsInput>
  where?: Prisma.ProgramPeriodWhereInput
}

export type ProgramPeriodUpdateToOneWithWhereWithoutDonationsInput = {
  where?: Prisma.ProgramPeriodWhereInput
  data: Prisma.XOR<Prisma.ProgramPeriodUpdateWithoutDonationsInput, Prisma.ProgramPeriodUncheckedUpdateWithoutDonationsInput>
}

export type ProgramPeriodUpdateWithoutDonationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  program?: Prisma.ProgramUpdateOneRequiredWithoutProgramPeriodsNestedInput
}

export type ProgramPeriodUncheckedUpdateWithoutDonationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  programId?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProgramPeriodCreateWithoutProgramInput = {
  id?: string
  startDate: Date | string
  endDate: Date | string
  cycleNumber?: number | null
  currentAmount?: runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: string | null
  recurringDay?: number | null
  recurringDurationDays?: number | null
  totalCycles?: number | null
  nextActivationDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  donations?: Prisma.DonationCreateNestedManyWithoutProgramPeriodInput
}

export type ProgramPeriodUncheckedCreateWithoutProgramInput = {
  id?: string
  startDate: Date | string
  endDate: Date | string
  cycleNumber?: number | null
  currentAmount?: runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: string | null
  recurringDay?: number | null
  recurringDurationDays?: number | null
  totalCycles?: number | null
  nextActivationDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  donations?: Prisma.DonationUncheckedCreateNestedManyWithoutProgramPeriodInput
}

export type ProgramPeriodCreateOrConnectWithoutProgramInput = {
  where: Prisma.ProgramPeriodWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutProgramInput, Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput>
}

export type ProgramPeriodCreateManyProgramInputEnvelope = {
  data: Prisma.ProgramPeriodCreateManyProgramInput | Prisma.ProgramPeriodCreateManyProgramInput[]
  skipDuplicates?: boolean
}

export type ProgramPeriodUpsertWithWhereUniqueWithoutProgramInput = {
  where: Prisma.ProgramPeriodWhereUniqueInput
  update: Prisma.XOR<Prisma.ProgramPeriodUpdateWithoutProgramInput, Prisma.ProgramPeriodUncheckedUpdateWithoutProgramInput>
  create: Prisma.XOR<Prisma.ProgramPeriodCreateWithoutProgramInput, Prisma.ProgramPeriodUncheckedCreateWithoutProgramInput>
}

export type ProgramPeriodUpdateWithWhereUniqueWithoutProgramInput = {
  where: Prisma.ProgramPeriodWhereUniqueInput
  data: Prisma.XOR<Prisma.ProgramPeriodUpdateWithoutProgramInput, Prisma.ProgramPeriodUncheckedUpdateWithoutProgramInput>
}

export type ProgramPeriodUpdateManyWithWhereWithoutProgramInput = {
  where: Prisma.ProgramPeriodScalarWhereInput
  data: Prisma.XOR<Prisma.ProgramPeriodUpdateManyMutationInput, Prisma.ProgramPeriodUncheckedUpdateManyWithoutProgramInput>
}

export type ProgramPeriodScalarWhereInput = {
  AND?: Prisma.ProgramPeriodScalarWhereInput | Prisma.ProgramPeriodScalarWhereInput[]
  OR?: Prisma.ProgramPeriodScalarWhereInput[]
  NOT?: Prisma.ProgramPeriodScalarWhereInput | Prisma.ProgramPeriodScalarWhereInput[]
  id?: Prisma.StringFilter<"ProgramPeriod"> | string
  programId?: Prisma.StringFilter<"ProgramPeriod"> | string
  startDate?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  endDate?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  cycleNumber?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  currentAmount?: Prisma.DecimalFilter<"ProgramPeriod"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.StringNullableFilter<"ProgramPeriod"> | string | null
  recurringDay?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  recurringDurationDays?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  totalCycles?: Prisma.IntNullableFilter<"ProgramPeriod"> | number | null
  nextActivationDate?: Prisma.DateTimeNullableFilter<"ProgramPeriod"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramPeriod"> | Date | string
}

export type ProgramPeriodCreateManyProgramInput = {
  id?: string
  startDate: Date | string
  endDate: Date | string
  cycleNumber?: number | null
  currentAmount?: runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: string | null
  recurringDay?: number | null
  recurringDurationDays?: number | null
  totalCycles?: number | null
  nextActivationDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProgramPeriodUpdateWithoutProgramInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  donations?: Prisma.DonationUpdateManyWithoutProgramPeriodNestedInput
}

export type ProgramPeriodUncheckedUpdateWithoutProgramInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  donations?: Prisma.DonationUncheckedUpdateManyWithoutProgramPeriodNestedInput
}

export type ProgramPeriodUncheckedUpdateManyWithoutProgramInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  cycleNumber?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  currentAmount?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  recurringFrequency?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  recurringDay?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  recurringDurationDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  totalCycles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  nextActivationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ProgramPeriodCountOutputType
 */

export type ProgramPeriodCountOutputType = {
  donations: number
}

export type ProgramPeriodCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  donations?: boolean | ProgramPeriodCountOutputTypeCountDonationsArgs
}

/**
 * ProgramPeriodCountOutputType without action
 */
export type ProgramPeriodCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriodCountOutputType
   */
  select?: Prisma.ProgramPeriodCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ProgramPeriodCountOutputType without action
 */
export type ProgramPeriodCountOutputTypeCountDonationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DonationWhereInput
}


export type ProgramPeriodSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  programId?: boolean
  startDate?: boolean
  endDate?: boolean
  cycleNumber?: boolean
  currentAmount?: boolean
  recurringFrequency?: boolean
  recurringDay?: boolean
  recurringDurationDays?: boolean
  totalCycles?: boolean
  nextActivationDate?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  donations?: boolean | Prisma.ProgramPeriod$donationsArgs<ExtArgs>
  program?: boolean | Prisma.ProgramDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.ProgramPeriodCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["programPeriod"]>

export type ProgramPeriodSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  programId?: boolean
  startDate?: boolean
  endDate?: boolean
  cycleNumber?: boolean
  currentAmount?: boolean
  recurringFrequency?: boolean
  recurringDay?: boolean
  recurringDurationDays?: boolean
  totalCycles?: boolean
  nextActivationDate?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  program?: boolean | Prisma.ProgramDefaultArgs<ExtArgs>
}, ExtArgs["result"]["programPeriod"]>

export type ProgramPeriodSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  programId?: boolean
  startDate?: boolean
  endDate?: boolean
  cycleNumber?: boolean
  currentAmount?: boolean
  recurringFrequency?: boolean
  recurringDay?: boolean
  recurringDurationDays?: boolean
  totalCycles?: boolean
  nextActivationDate?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  program?: boolean | Prisma.ProgramDefaultArgs<ExtArgs>
}, ExtArgs["result"]["programPeriod"]>

export type ProgramPeriodSelectScalar = {
  id?: boolean
  programId?: boolean
  startDate?: boolean
  endDate?: boolean
  cycleNumber?: boolean
  currentAmount?: boolean
  recurringFrequency?: boolean
  recurringDay?: boolean
  recurringDurationDays?: boolean
  totalCycles?: boolean
  nextActivationDate?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ProgramPeriodOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "programId" | "startDate" | "endDate" | "cycleNumber" | "currentAmount" | "recurringFrequency" | "recurringDay" | "recurringDurationDays" | "totalCycles" | "nextActivationDate" | "createdAt" | "updatedAt", ExtArgs["result"]["programPeriod"]>
export type ProgramPeriodInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  donations?: boolean | Prisma.ProgramPeriod$donationsArgs<ExtArgs>
  program?: boolean | Prisma.ProgramDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.ProgramPeriodCountOutputTypeDefaultArgs<ExtArgs>
}
export type ProgramPeriodIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  program?: boolean | Prisma.ProgramDefaultArgs<ExtArgs>
}
export type ProgramPeriodIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  program?: boolean | Prisma.ProgramDefaultArgs<ExtArgs>
}

export type $ProgramPeriodPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ProgramPeriod"
  objects: {
    donations: Prisma.$DonationPayload<ExtArgs>[]
    program: Prisma.$ProgramPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    programId: string
    startDate: Date
    endDate: Date
    cycleNumber: number | null
    currentAmount: runtime.Decimal
    recurringFrequency: string | null
    recurringDay: number | null
    recurringDurationDays: number | null
    totalCycles: number | null
    nextActivationDate: Date | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["programPeriod"]>
  composites: {}
}

export type ProgramPeriodGetPayload<S extends boolean | null | undefined | ProgramPeriodDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload, S>

export type ProgramPeriodCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProgramPeriodFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProgramPeriodCountAggregateInputType | true
  }

export interface ProgramPeriodDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProgramPeriod'], meta: { name: 'ProgramPeriod' } }
  /**
   * Find zero or one ProgramPeriod that matches the filter.
   * @param {ProgramPeriodFindUniqueArgs} args - Arguments to find a ProgramPeriod
   * @example
   * // Get one ProgramPeriod
   * const programPeriod = await prisma.programPeriod.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProgramPeriodFindUniqueArgs>(args: Prisma.SelectSubset<T, ProgramPeriodFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProgramPeriodClient<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ProgramPeriod that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProgramPeriodFindUniqueOrThrowArgs} args - Arguments to find a ProgramPeriod
   * @example
   * // Get one ProgramPeriod
   * const programPeriod = await prisma.programPeriod.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProgramPeriodFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProgramPeriodFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramPeriodClient<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProgramPeriod that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramPeriodFindFirstArgs} args - Arguments to find a ProgramPeriod
   * @example
   * // Get one ProgramPeriod
   * const programPeriod = await prisma.programPeriod.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProgramPeriodFindFirstArgs>(args?: Prisma.SelectSubset<T, ProgramPeriodFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProgramPeriodClient<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProgramPeriod that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramPeriodFindFirstOrThrowArgs} args - Arguments to find a ProgramPeriod
   * @example
   * // Get one ProgramPeriod
   * const programPeriod = await prisma.programPeriod.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProgramPeriodFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProgramPeriodFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramPeriodClient<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ProgramPeriods that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramPeriodFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ProgramPeriods
   * const programPeriods = await prisma.programPeriod.findMany()
   * 
   * // Get first 10 ProgramPeriods
   * const programPeriods = await prisma.programPeriod.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const programPeriodWithIdOnly = await prisma.programPeriod.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProgramPeriodFindManyArgs>(args?: Prisma.SelectSubset<T, ProgramPeriodFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ProgramPeriod.
   * @param {ProgramPeriodCreateArgs} args - Arguments to create a ProgramPeriod.
   * @example
   * // Create one ProgramPeriod
   * const ProgramPeriod = await prisma.programPeriod.create({
   *   data: {
   *     // ... data to create a ProgramPeriod
   *   }
   * })
   * 
   */
  create<T extends ProgramPeriodCreateArgs>(args: Prisma.SelectSubset<T, ProgramPeriodCreateArgs<ExtArgs>>): Prisma.Prisma__ProgramPeriodClient<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ProgramPeriods.
   * @param {ProgramPeriodCreateManyArgs} args - Arguments to create many ProgramPeriods.
   * @example
   * // Create many ProgramPeriods
   * const programPeriod = await prisma.programPeriod.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProgramPeriodCreateManyArgs>(args?: Prisma.SelectSubset<T, ProgramPeriodCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ProgramPeriods and returns the data saved in the database.
   * @param {ProgramPeriodCreateManyAndReturnArgs} args - Arguments to create many ProgramPeriods.
   * @example
   * // Create many ProgramPeriods
   * const programPeriod = await prisma.programPeriod.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ProgramPeriods and only return the `id`
   * const programPeriodWithIdOnly = await prisma.programPeriod.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProgramPeriodCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProgramPeriodCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ProgramPeriod.
   * @param {ProgramPeriodDeleteArgs} args - Arguments to delete one ProgramPeriod.
   * @example
   * // Delete one ProgramPeriod
   * const ProgramPeriod = await prisma.programPeriod.delete({
   *   where: {
   *     // ... filter to delete one ProgramPeriod
   *   }
   * })
   * 
   */
  delete<T extends ProgramPeriodDeleteArgs>(args: Prisma.SelectSubset<T, ProgramPeriodDeleteArgs<ExtArgs>>): Prisma.Prisma__ProgramPeriodClient<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ProgramPeriod.
   * @param {ProgramPeriodUpdateArgs} args - Arguments to update one ProgramPeriod.
   * @example
   * // Update one ProgramPeriod
   * const programPeriod = await prisma.programPeriod.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProgramPeriodUpdateArgs>(args: Prisma.SelectSubset<T, ProgramPeriodUpdateArgs<ExtArgs>>): Prisma.Prisma__ProgramPeriodClient<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ProgramPeriods.
   * @param {ProgramPeriodDeleteManyArgs} args - Arguments to filter ProgramPeriods to delete.
   * @example
   * // Delete a few ProgramPeriods
   * const { count } = await prisma.programPeriod.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProgramPeriodDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProgramPeriodDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProgramPeriods.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramPeriodUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ProgramPeriods
   * const programPeriod = await prisma.programPeriod.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProgramPeriodUpdateManyArgs>(args: Prisma.SelectSubset<T, ProgramPeriodUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProgramPeriods and returns the data updated in the database.
   * @param {ProgramPeriodUpdateManyAndReturnArgs} args - Arguments to update many ProgramPeriods.
   * @example
   * // Update many ProgramPeriods
   * const programPeriod = await prisma.programPeriod.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ProgramPeriods and only return the `id`
   * const programPeriodWithIdOnly = await prisma.programPeriod.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProgramPeriodUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProgramPeriodUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ProgramPeriod.
   * @param {ProgramPeriodUpsertArgs} args - Arguments to update or create a ProgramPeriod.
   * @example
   * // Update or create a ProgramPeriod
   * const programPeriod = await prisma.programPeriod.upsert({
   *   create: {
   *     // ... data to create a ProgramPeriod
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ProgramPeriod we want to update
   *   }
   * })
   */
  upsert<T extends ProgramPeriodUpsertArgs>(args: Prisma.SelectSubset<T, ProgramPeriodUpsertArgs<ExtArgs>>): Prisma.Prisma__ProgramPeriodClient<runtime.Types.Result.GetResult<Prisma.$ProgramPeriodPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ProgramPeriods.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramPeriodCountArgs} args - Arguments to filter ProgramPeriods to count.
   * @example
   * // Count the number of ProgramPeriods
   * const count = await prisma.programPeriod.count({
   *   where: {
   *     // ... the filter for the ProgramPeriods we want to count
   *   }
   * })
  **/
  count<T extends ProgramPeriodCountArgs>(
    args?: Prisma.Subset<T, ProgramPeriodCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProgramPeriodCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ProgramPeriod.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramPeriodAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProgramPeriodAggregateArgs>(args: Prisma.Subset<T, ProgramPeriodAggregateArgs>): Prisma.PrismaPromise<GetProgramPeriodAggregateType<T>>

  /**
   * Group by ProgramPeriod.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramPeriodGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProgramPeriodGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProgramPeriodGroupByArgs['orderBy'] }
      : { orderBy?: ProgramPeriodGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProgramPeriodGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramPeriodGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ProgramPeriod model
 */
readonly fields: ProgramPeriodFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ProgramPeriod.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProgramPeriodClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  donations<T extends Prisma.ProgramPeriod$donationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramPeriod$donationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  program<T extends Prisma.ProgramDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramDefaultArgs<ExtArgs>>): Prisma.Prisma__ProgramClient<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ProgramPeriod model
 */
export interface ProgramPeriodFieldRefs {
  readonly id: Prisma.FieldRef<"ProgramPeriod", 'String'>
  readonly programId: Prisma.FieldRef<"ProgramPeriod", 'String'>
  readonly startDate: Prisma.FieldRef<"ProgramPeriod", 'DateTime'>
  readonly endDate: Prisma.FieldRef<"ProgramPeriod", 'DateTime'>
  readonly cycleNumber: Prisma.FieldRef<"ProgramPeriod", 'Int'>
  readonly currentAmount: Prisma.FieldRef<"ProgramPeriod", 'Decimal'>
  readonly recurringFrequency: Prisma.FieldRef<"ProgramPeriod", 'String'>
  readonly recurringDay: Prisma.FieldRef<"ProgramPeriod", 'Int'>
  readonly recurringDurationDays: Prisma.FieldRef<"ProgramPeriod", 'Int'>
  readonly totalCycles: Prisma.FieldRef<"ProgramPeriod", 'Int'>
  readonly nextActivationDate: Prisma.FieldRef<"ProgramPeriod", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"ProgramPeriod", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ProgramPeriod", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ProgramPeriod findUnique
 */
export type ProgramPeriodFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * Filter, which ProgramPeriod to fetch.
   */
  where: Prisma.ProgramPeriodWhereUniqueInput
}

/**
 * ProgramPeriod findUniqueOrThrow
 */
export type ProgramPeriodFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * Filter, which ProgramPeriod to fetch.
   */
  where: Prisma.ProgramPeriodWhereUniqueInput
}

/**
 * ProgramPeriod findFirst
 */
export type ProgramPeriodFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * Filter, which ProgramPeriod to fetch.
   */
  where?: Prisma.ProgramPeriodWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramPeriods to fetch.
   */
  orderBy?: Prisma.ProgramPeriodOrderByWithRelationInput | Prisma.ProgramPeriodOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProgramPeriods.
   */
  cursor?: Prisma.ProgramPeriodWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramPeriods from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramPeriods.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProgramPeriods.
   */
  distinct?: Prisma.ProgramPeriodScalarFieldEnum | Prisma.ProgramPeriodScalarFieldEnum[]
}

/**
 * ProgramPeriod findFirstOrThrow
 */
export type ProgramPeriodFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * Filter, which ProgramPeriod to fetch.
   */
  where?: Prisma.ProgramPeriodWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramPeriods to fetch.
   */
  orderBy?: Prisma.ProgramPeriodOrderByWithRelationInput | Prisma.ProgramPeriodOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProgramPeriods.
   */
  cursor?: Prisma.ProgramPeriodWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramPeriods from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramPeriods.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProgramPeriods.
   */
  distinct?: Prisma.ProgramPeriodScalarFieldEnum | Prisma.ProgramPeriodScalarFieldEnum[]
}

/**
 * ProgramPeriod findMany
 */
export type ProgramPeriodFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * Filter, which ProgramPeriods to fetch.
   */
  where?: Prisma.ProgramPeriodWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramPeriods to fetch.
   */
  orderBy?: Prisma.ProgramPeriodOrderByWithRelationInput | Prisma.ProgramPeriodOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ProgramPeriods.
   */
  cursor?: Prisma.ProgramPeriodWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramPeriods from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramPeriods.
   */
  skip?: number
  distinct?: Prisma.ProgramPeriodScalarFieldEnum | Prisma.ProgramPeriodScalarFieldEnum[]
}

/**
 * ProgramPeriod create
 */
export type ProgramPeriodCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * The data needed to create a ProgramPeriod.
   */
  data: Prisma.XOR<Prisma.ProgramPeriodCreateInput, Prisma.ProgramPeriodUncheckedCreateInput>
}

/**
 * ProgramPeriod createMany
 */
export type ProgramPeriodCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ProgramPeriods.
   */
  data: Prisma.ProgramPeriodCreateManyInput | Prisma.ProgramPeriodCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ProgramPeriod createManyAndReturn
 */
export type ProgramPeriodCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * The data used to create many ProgramPeriods.
   */
  data: Prisma.ProgramPeriodCreateManyInput | Prisma.ProgramPeriodCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ProgramPeriod update
 */
export type ProgramPeriodUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * The data needed to update a ProgramPeriod.
   */
  data: Prisma.XOR<Prisma.ProgramPeriodUpdateInput, Prisma.ProgramPeriodUncheckedUpdateInput>
  /**
   * Choose, which ProgramPeriod to update.
   */
  where: Prisma.ProgramPeriodWhereUniqueInput
}

/**
 * ProgramPeriod updateMany
 */
export type ProgramPeriodUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ProgramPeriods.
   */
  data: Prisma.XOR<Prisma.ProgramPeriodUpdateManyMutationInput, Prisma.ProgramPeriodUncheckedUpdateManyInput>
  /**
   * Filter which ProgramPeriods to update
   */
  where?: Prisma.ProgramPeriodWhereInput
  /**
   * Limit how many ProgramPeriods to update.
   */
  limit?: number
}

/**
 * ProgramPeriod updateManyAndReturn
 */
export type ProgramPeriodUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * The data used to update ProgramPeriods.
   */
  data: Prisma.XOR<Prisma.ProgramPeriodUpdateManyMutationInput, Prisma.ProgramPeriodUncheckedUpdateManyInput>
  /**
   * Filter which ProgramPeriods to update
   */
  where?: Prisma.ProgramPeriodWhereInput
  /**
   * Limit how many ProgramPeriods to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ProgramPeriod upsert
 */
export type ProgramPeriodUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * The filter to search for the ProgramPeriod to update in case it exists.
   */
  where: Prisma.ProgramPeriodWhereUniqueInput
  /**
   * In case the ProgramPeriod found by the `where` argument doesn't exist, create a new ProgramPeriod with this data.
   */
  create: Prisma.XOR<Prisma.ProgramPeriodCreateInput, Prisma.ProgramPeriodUncheckedCreateInput>
  /**
   * In case the ProgramPeriod was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProgramPeriodUpdateInput, Prisma.ProgramPeriodUncheckedUpdateInput>
}

/**
 * ProgramPeriod delete
 */
export type ProgramPeriodDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
  /**
   * Filter which ProgramPeriod to delete.
   */
  where: Prisma.ProgramPeriodWhereUniqueInput
}

/**
 * ProgramPeriod deleteMany
 */
export type ProgramPeriodDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProgramPeriods to delete
   */
  where?: Prisma.ProgramPeriodWhereInput
  /**
   * Limit how many ProgramPeriods to delete.
   */
  limit?: number
}

/**
 * ProgramPeriod.donations
 */
export type ProgramPeriod$donationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Donation
   */
  select?: Prisma.DonationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Donation
   */
  omit?: Prisma.DonationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DonationInclude<ExtArgs> | null
  where?: Prisma.DonationWhereInput
  orderBy?: Prisma.DonationOrderByWithRelationInput | Prisma.DonationOrderByWithRelationInput[]
  cursor?: Prisma.DonationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.DonationScalarFieldEnum | Prisma.DonationScalarFieldEnum[]
}

/**
 * ProgramPeriod without action
 */
export type ProgramPeriodDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramPeriod
   */
  select?: Prisma.ProgramPeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramPeriod
   */
  omit?: Prisma.ProgramPeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramPeriodInclude<ExtArgs> | null
}
