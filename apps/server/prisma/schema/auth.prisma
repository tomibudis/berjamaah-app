model User {
  id                String     @id @map("_id")
  name              String
  email             String     @unique
  emailVerified     Boolean
  image             String?
  createdAt         DateTime
  updatedAt         DateTime
  banExpires        DateTime?
  banReason         String?
  banned            Boolean    @default(false)
  role              String     @default("user")
  fullName          String?    @map("full_name")
  phone             String?
  bio               String?
  firstName         String?    @map("first_name")
  lastName          String?    @map("last_name")
  accounts          Account[]
  verifiedDonations Donation[] @relation("VerifiedByAdmin")
  approvedPrograms  Program[]  @relation("ApprovedPrograms")
  rejectedPrograms  Program[]  @relation("RejectedPrograms")
  sessions          Session[]

  @@map("user")
}

model Session {
  id             String   @id @map("_id")
  expiresAt      DateTime
  token          String   @unique
  createdAt      DateTime
  updatedAt      DateTime
  ipAddress      String?
  userAgent      String?
  userId         String
  impersonatedBy String?
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id @map("_id")
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id @map("_id")
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
